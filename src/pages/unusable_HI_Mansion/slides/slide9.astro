---
import SlideLayout from '@layouts/slide_layout.astro'
// images
import { Image } from 'astro:assets'
import ghost from './Images/ghost.png'
---

<SlideLayout>
    <div class="slide-content">
        <div class="textArea" style="position: relative;">
            <div class="text first" style="position: absolute; font-size: 40px; opacity: 1; left: 20px;">
                おっと<br><span class="white"
                    style="position: absolute; width: 900px; font-size: 56px; left: 20px;">「直感に反するインターフェース」<br></span>
                <span style="position: absolute; width: 200px; top: 150px; left: 730px;">が現れた！</span>
            </div>
        </div>
        <div class="buttonArea" style="opacity: 0;">
            <button id="fight" style="
            top: 85%;
            left: 28%;
            transform: translate(-50%, -50%);
            width: 375px;
            height: 50px;
            
            ">たたかう</button>
            <button id="escape" style="
            top: 85%;
            left: 73%;
            transform: translate(-50%, -50%);
            width: 375px;
            height: 50px;
            
            ">にげる</button>
        </div>
        <Image src={ghost} alt="ghost" class="ghost" style="width: 300px; transform: translate(-50%, -50%); opacity: 0; position: absolute; top: 55%; left: 50%; transition: opacity 1s, width 1s, transform 1s;"/>
    </div>
    <script is:inline>
        window.addEventListener('DOMContentLoaded', () => {
            const textFirst = document.querySelector('.first');
            const ghost = document.querySelector('.ghost');
            const buttonArea = document.querySelector('.buttonArea');

            // 画面の要素を時間差で登場させる
            setTimeout(() => {
                textFirst.style.transition = "opacity 1s ease-in-out"
                ghost.style.transition = "opacity 1s ease-in-out"
                textFirst.style.opacity = 1;
                ghost.style.opacity = 1;
            }, 1000);

            setTimeout(() => {
                buttonArea.style.transition = "opacity 1s ease-in-out"
                buttonArea.style.opacity = 1;
            }, 3000);

            // ボタンが押されたら画面遷移
            const fightButton = document.getElementById('fight');
            fightButton.addEventListener('click', () => {
                const nextPageUrl = '../slide12/index.html';

                // 次のページを読み込む
                window.fetch(nextPageUrl).then((response) => {
                    // 読み込みが完了したら画面遷移を行う
                    window.location.href = nextPageUrl;
                });

                // 次のページを読み込む
                window.fetch(nextPageUrl).then((response) => {
                    // 読み込みが完了したら画面遷移を行う
                    window.location.href = nextPageUrl;
                });
            });

            // ボタンが押されたら画面遷移
            const escapeButton = document.getElementById('escape');
            escapeButton.addEventListener('click', () => {
                const nextPageUrl = '../slide10/index.html';

                // 次のページを読み込む
                window.fetch(nextPageUrl).then((response) => {
                    // 読み込みが完了したら画面遷移を行う
                    window.location.href = nextPageUrl;
                });

                // 次のページを読み込む
                window.fetch(nextPageUrl).then((response) => {
                    // 読み込みが完了したら画面遷移を行う
                    window.location.href = nextPageUrl;
                });
            });
        });        
    </script>
</body>

</html>