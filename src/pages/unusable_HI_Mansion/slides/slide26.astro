---
import SlideLayout from '@layouts/slide_layout.astro'
// images
import { Image } from 'astro:assets'
import ghost from './Images/ghost.png'
---

<SlideLayout>
    <div class="slide-content">
        <div class="textArea" style="position: relative; top: 10px; left: 20px; transform: translate(0%, 0%);">
            <div class="text first" style="position: absolute; top: 170px; left: 140px; font-size: 40px; opacity: 0;">
                準備はいいですか？<br>
                <span class="white" style="text-decoration: underline;">5秒以内</span>ですよ
                <div class="text second" style="position: absolute; top: 120px; font-size: 40px; opacity: 0;">
                    いきますよ・・・
                </div>
            </div>

            <Image src={ghost} alt="ghost" class="ghost" style="width: 200px; opacity: 0; position: absolute; top: 280px; left: 70%; transition: opacity 1s, width 1s, transform 1s;"/>
            <img class="ghost" src="./Images/ghost.png"
                style="width: 200px; opacity: 0; position: absolute; top: 280px; left: 70%; transition: opacity 1s, width 1s, transform 1s;">
        </div>
        <script is:inline>
            window.addEventListener('DOMContentLoaded', () => {
                const textFirst = document.querySelector('.first');
                const textSecond = document.querySelector('.second');
                const ghost = document.querySelector('.ghost');

                // 画面の要素を時間差で登場させる
                setTimeout(() => {
                    textFirst.style.transition = "opacity 2s ease-in-out";
                    ghost.style.transition = "opacity 1s ease-in-out";
                    textFirst.style.opacity = 1;
                    ghost.style.opacity = 1;
                }, 500);

                setTimeout(() => {
                    textSecond.style.transition = "opacity 2s ease-in-out";
                    textSecond.style.opacity = 1;
                }, 4000);

                setTimeout(() => {
                    const nextPageUrl = '../slide27/index.html';

                    // 次のページを読み込む
                    window.fetch(nextPageUrl).then((response) => {
                        // 読み込みが完了したら画面遷移を行う
                        window.location.href = nextPageUrl;
                    });
                }, 7000);
            });
        </script>
</SlideLayout>