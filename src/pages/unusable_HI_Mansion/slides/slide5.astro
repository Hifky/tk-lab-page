---
import SlideLayout from '@layouts/slide_layout.astro'
// images
import { Image } from 'astro:assets'
import ghost from './Images/ghost.png'
import arrow from './Images/arrow.png'
---

<SlideLayout>
    <div class="slide-content">
        <div class="textArea" style="position: absolute; top: 10px; left: 20px; transform: translate(0%, 0%);">
            <div class="text first" style="display: inline-block; font-size: 40px; opacity: 1;">
                おっといきなり<br><span class="white" style="font-size: 56px;">「一貫性のないインターフェース」<br></span>
                <span style="position: absolute; right: 10px;">が現れた！！</span>
            </div>
        </div>
        <div class="buttonArea" style="opacity: 1;">
            <button id="no" style="
            top: 85%;
            left: 30%;
            transform: translate(-50%, -50%);
            width: 450px;
            height: 50px;
            
            ">NO</button>
            <button id="yes" style="
            top: 85%;
            left: 75%;
            transform: translate(-50%, -50%);
            width: 300px;
            height: 50px;
            
            ">YES</button>
        </div>
        <Image src={ghost} alt="ghost" class="ghost" style="width: 300px; transform: translate(-50%, -50%); opacity: 1; position: absolute; top: 55%; left: 50%; transition: opacity 1s, width 1s, transform 1s;"/>
        <Image src={arrow} alt="arrow" class="arrow-down" style="position: absolute; top: 240px; left: 190px; width: 200px;"/>
        <Image src={arrow} alt="arrow" class="arrow-down" style="position: absolute; top: 240px; left: 620px; width: 200px;"/>
    </div>
    <script is:inline>
        window.addEventListener('DOMContentLoaded', () => {
            // 6秒後に自動で画面遷移
            setTimeout(() => {
                const nextPageUrl = '../slide6/index.html';

                // 次のページを読み込む
                window.fetch(nextPageUrl).then((response) => {
                    // 読み込みが完了したら画面遷移を行う
                    window.location.href = nextPageUrl;
                });
            }, 6000);
        });

        // パルスアニメーションを適用する画像要素を取得
        const arrows = document.querySelectorAll('.arrow-down');

        // パルスアニメーションの関数
        function pulse(element) {
            let count = 0;
            const pulseInterval = setInterval(() => {
                if (count === 6) {
                    clearInterval(pulseInterval); // アニメーション終了後にクリア
                } else {
                    if (element.style.transform === 'scale(1)') {
                        element.style.transform = 'scale(1.3)';
                    } else {
                        element.style.transform = 'scale(1)';
                        count++;
                    }
                }
            }, 100); // 0.1秒ごとに変化する
        }

        // すべての矢印要素にパルスアニメーションを適用
        setTimeout(() => {
            arrows.forEach(arrow => {
                arrow.style.transition = 'transform 0.3s'; // 大きさを変化させるトランジションの設定
                pulse(arrow);
            });
        }, 2000);

    </script>
</SlideLayout>